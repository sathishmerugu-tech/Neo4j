CALL apoc.periodic.iterate(
  "LOAD CSV WITH HEADERS FROM 'file:///test.csv' AS csvLine FIELDTERMINATOR '^' RETURN csvLine",
  "WITH csvLine, keys(csvLine) as keys,
  (CASE csvLine.entity_type
    WHEN 'RACK' THEN 'equipmentholder'
    WHEN 'SHELF' THEN 'equipmentholder'
    WHEN 'SLOT' THEN 'equipmentholder'
    WHEN 'CARD' THEN 'equipment'
    WHEN 'SUBSLOT' THEN 'equipment'
    WHEN 'SUB-SLOT' THEN 'equipment'
    ELSE 'junk'
  END) AS c,
  (CASE split(csvLine.parent_entity,'-')[1]
    WHEN 'RACK' THEN 'equipmentholder'
    WHEN 'SHELF' THEN 'equipmentholder'
    WHEN 'SLOT' THEN 'equipmentholder'
    WHEN 'CARD' THEN 'equipment'
    WHEN 'SUBSLOT' THEN 'equipment'
    WHEN 'SUB-SLOT' THEN 'equipment'
    ELSE 'junk'
  END) AS pa

  CALL apoc.do.case([
    c = 'equipment', 'MATCH (n:equipment) WHERE n.entity_id = $entity_id AND n.entity_type = $entity_type AND n.source_sys = $source_sys RETURN n as child',
    c = 'equipmentholder', 'MATCH (n:equipmentholder) WHERE n.entity_id = $entity_id AND n.entity_type = $entity_type AND n.source_sys = $source_sys RETURN n as child'],
    {entity_id: csvLine.entity_id, entity_type: csvLine.entity_type, source_sys: csvLine.source_sys}) YIELD value

  WITH csvLine, pa, value.child as child, split(csvLine.parent_entity,'-') as pkeys
  WHERE size(pkeys) = 3
  CALL apoc.do.case([
    pa = 'equipment', 'MATCH (n:equipment) WHERE n.entity_id = $eid AND n.entity_type = $etype AND n.source_sys = $ess RETURN n as parent',
    pa = 'equipmentholder', 'MATCH (n:equipmentholder) WHERE n.entity_id = $eid AND n.entity_type = $etype AND n.source_sys = $ess RETURN n as parent'],
    {eid: pkeys[0], etype: pkeys[1], ess: pkeys[2]}) YIELD value

  WITH child, value.parent as parent, csvLine
  CREATE (parent)-[:contains]->(child)
  SET c = csvLine
  RETURN c",
  {batchSize:1000, parallel:true}
)
